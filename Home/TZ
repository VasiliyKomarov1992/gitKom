тебе нужно создать 2 класса: модель клиента и модель сервера.
ща, подумаю как между ними организовать взаимодействие
короче, в джаве струкрут нет, тебе нужен еще класс, который моделирует письмо.
там адрес отправителя, адрес получателя и сам текст.

в классе, моделирующем узел сети должны быть поля:
список, хранящий принятые сообщения;
список, хранящий отправленные сообщения;
метод, принимающий сообщения;
метод, отправляющий сообщения.
вернее, сообщениЕ

в классе, который моделирует сервер, должны быть:
1. поля
1.1 поле, являющееся списком, который хранит все письма,прошедшие через сервер.
2. методы
2.1 метод, пересылающий сообщение и сохраняющий его копию.

1. метод, класса - клиента создает письмо. потом вызывается метод класса - сервера, в который это письмо передается.
 если клиент, указанный в графе "получатель" письма имеется в "базе данных" адресов сервера,
  то метод, передающий сообщение возвращает true и вызывает метод, реализующий прием сообщения в клиенте - приёмнике.
  если false - вывод информативного сообщения, что такого клиента в базе нет.

ну и там чтоб по ходу дела информировался пользователь о статусе передачи.
ну и чтоб там все хранилось, отправленные, переданные. думаю, это уточнять не надо?

бля я просто обожаю тех. тексты писать)
это так, черновой вариант
смотри. когда письмо принимается - оно добавляется в список принятых. когда сервер возвращает true - в список отправленных
ну и прежде, чем сервер вызовет метод, принимающий письмо в клиенте - приемнике, добавляет в свой список оборота писем
ну и потом ебанешь, чтоб показывались все эти списки, по желанию

